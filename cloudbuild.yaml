steps:
- id: pull dependencies
  name: bitwalker/alpine-elixir-phoenix:1.6.6
  args: ["mix", "do", "deps.get", "--all", ",", "compile"]
  env:
  - MIX_ENV=test
  waitFor: ["-"]
- id: start test database
  name: gcr.io/cloud-builders/docker
  args: ["run", "--name=postgres", "--network=cloudbuild", "-d", "--rm", "-p=5432:5432", "postgres:9.6-alpine"]
  waitFor: ["-"]
- id: run tests
  name: bitwalker/alpine-elixir-phoenix:1.6.6
  args: ["mix", "test", "--cover", "--trace"]
  env:
  - MIX_ENV=test
  waitFor: ["start test database", "pull dependencies"]
- id: static code analysis
  name: bitwalker/alpine-elixir-phoenix:1.6.6
  args: ["mix", "credo", "--verbose"]
  env:
  - MIX_ENV=test
  waitFor: ["pull dependencies"]
- id: pull docker cache image
  name: gcr.io/cloud-builders/docker
  args: ['pull', 'gcr.io/$PROJECT_ID/quickstart-image:${BRANCH_NAME}']
- id: docker build
  name: gcr.io/cloud-builders/docker
  args: [
    'build',
    '-t=gcr.io/$PROJECT_ID/quickstart-image:${BRANCH_NAME}',
    '--cache-from=gcr.io/$PROJECT_ID/quickstart-image:${BRANCH_NAME}',
    '.'
  ]
- id: docker build
  name: gcr.io/cloud-builders/docker
  args: [
    'tag',
    'gcr.io/$PROJECT_ID/quickstart-image:${BRANCH_NAME}',
    'gcr.io/$PROJECT_ID/quickstart-image:latest'
  ]
images:
- gcr.io/$PROJECT_ID/quickstart-image:${BRANCH_NAME}
- gcr.io/$PROJECT_ID/quickstart-image:latest
